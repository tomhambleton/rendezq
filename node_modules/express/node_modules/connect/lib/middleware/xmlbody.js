
/*!
 * Connect - xmlbody

 */

/**
 * Module dependencies.
 */

var utils = require('../utils')
  , _limit = require('./limit');

/**
 * noop middleware.
 */

function noop(req, res, next) {
  next();
}

/**
 * XMLBody:
 *
 * Parse XML request bodies, providing the
 * parsed object as `req.rawBody`.
 *
 * Options:
 *
 *   - `strict`  when `false` anything `JSON.parse()` accepts will be parsed
 *   - `reviver`  used as the second "reviver" argument for JSON.parse
 *   - `limit`  byte limit disabled by default
 *
 * @param {Object} options
 * @return {Function}
 * @api public
 */

exports = module.exports = function(options){
  var options = options || {}
    , strict = options.strict !== false;

  var limit = options.limit
    ? _limit(options.limit)
    : noop;

  return function json(req, res, next) {
    if (req._body) return next();
    req.body = req.body || {};

    // check Content-Type
    if ('application/xml' != utils.mime(req)) return next();

    // flag as parsed
    req._body = true;

    // parse
    limit(req, res, function(err){
      if (err) return next(err);
      var buf = '';
      req.setEncoding('utf8');
      req.on('data', function(chunk){ buf += chunk; });
      req.on('end', function(){
    	req.rawBody = buf;
        next();
      });
    });
  }
};